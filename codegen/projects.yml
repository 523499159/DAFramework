WorkDir: ..
props:
  slf4jVersion: "1.7.25"
  joddVersion: "3.8.5"
  bootVersion: "1.5.3.RELEASE"
  cloudVersion: Dalston.RELEASE
  mysqlVersion: "6.0.6"
  nutzVersion: "1.r.61"
  springSecurityVersion: "4.2.2.RELEASE"
  cloudSecurityVersion: "1.1.3.RELEASE"
  clientSecret: YFzCAfocMInyJ5YaO805
  jdbcUrl: "jdbc:mysql://127.0.0.1:3306/dataagg?useUnicode=true&characterEncoding=UTF-8&serverTimezone=UTC&zeroDateTimeBehavior=convertToNull"
  jdbcUser: "dataagg"
  jdbcPswd: "3yXcH7AIK7Wrs1sQeGJe"
group: com.dataagg
project: DAFramework
version: 0.1
plugins: [eclipse, idea, "'com.github.ben-manes.versions:0.14.0'"]
description: DAFramework

subProjects:
  commons:
    type: jar
    description: '公用实体类,VO及常用工具类'
    plugins: [java, eclipse, idea]
    archiveName: commons.jar
    deps:
      - compile 'org.jodd:jodd-core:${joddVersion}'
      - compile 'org.jodd:jodd-bean:${joddVersion}'
      - compile 'org.jodd:jodd-props:${joddVersion}'
      - compile 'com.google.code.gson:gson:2.8.0'
      - compile 'org.nutz:nutz:${nutzVersion}'
      - compile 'mysql:mysql-connector-java:${mysqlVersion}'
      - compile 'org.springframework.boot:spring-boot-starter-jdbc:${bootVersion}'
      - compile 'org.springframework.boot:spring-boot-starter-web:${bootVersion}'
      - compile 'org.springframework.boot:spring-boot-starter-security:${bootVersion}'
      - compile 'org.springframework.security:spring-security-core:${springSecurityVersion}'
      - compile 'org.springframework.security.oauth:spring-security-oauth2:2.0.13.RELEASE'
      - testCompile 'junit:junit:4.12'
      - testCompile 'org.springframework.boot:spring-boot-starter-test:${bootVersion}'
    config:
      logging:
        level:
          root: WARN
          com.dataagg: info
  service-center:
    description: eurekaServer(服务注册及发现)
    ports: 8761
    components: [springBoot, eurekaServer]
    config:
  api-gateway:
    description: api-gateway(API网关)+security(权限检查服务)
    ports: 80
    components: [springBoot, eurekaClient, starterWeb, zuul, feign, ':commons', starterJdbc]
    config:
      zuul:
        routes:
          core:
            path: /core/**
            serviceId: core-service
  core-service:
    description: "核心服务 用户,组织,角色,菜单,字典,区域,附件等基础服务"
    ports: 6000
    components: [springBoot, eurekaClient, feign, ':commons', starterWeb, starterJdbc, securityClient]
    docker:
      depends_on: [api-gateway]
    config:
      logging:
        level:
          root: WARN
          com.dataagg: info
      file:
        rootPath: e:\\wdtc\\html
        filePath: /files
      sms:
        #短信接口是否允许发送的标识，true允许，false不允许
        canSend: false
